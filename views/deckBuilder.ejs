<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body{
            display: grid;
        }
        #_id{
            visibility: hidden;
        }
        form{
            
            width: 50%;
            margin: 0 auto;
        }
        label{
        display: grid;
        grid-template-columns: 1fr 2fr;
      
        line-height: 40px;
        margin-bottom: 10px;
        }
        #counterContainer{
            display: grid;
            margin: 0  auto;
        }
    

    </style>
</head>

<!--endpoint?_method=PUT for updating-->

<!--To do mar 6. can now submit form so now need to create the put route to update the card info from the form inputs-->
<body>
    <a href="/">home</a>
   <center> <h1>deckBuilder</h1></center>
   <div class="formContainer">
        <form id="myForm" name="myForm" method="POST" action="/deckBuilderSubmit?_method=PUT">  
            <button type="submit" id ='submitbtn' form="myForm">submit</button>
            
        </form>
        <button id ="nextbtn">next</button>
            <button id ="prevbtn">prev</button>
    </div>
    <div id="counterContainer">
        <button id="countbtn">update Count</button>
    </div>
</body>


<script type="text/javascript">
   // const cardDeck = JSON.parse('<%#-JSON.stringify(cards) %>')

   sessionStorage.setItem('count',0);
    var counter = parseInt(sessionStorage.getItem('count'), 10)

    


   document.getElementById('countbtn').onclick = function(){
            let inputCount = document.getElementById('countInput').value;
            
            sessionStorage.setItem('count', inputCount);
            counter = parseInt(sessionStorage.getItem('count'));
            renderForm();
            

   }
   function updateCounter(){
    let countInput = document.getElementById('countInput')
    countInput.value = '';
    countInput.setAttribute('placeholder',counter)

   }

   function showCounter(){
    
    let counterContainer = document.getElementById('counterContainer');
    let countInput = document.createElement('input');
    countInput.setAttribute('id', 'countInput')
    countInput.setAttribute('placeholder', counter);
    counterContainer.appendChild(countInput);
   }
  

   async function renderForm(){
   

    const response = await fetch('http://localhost:3000/deckBuilderData')
    const cardDeck = await response.json();
    const deckLen = cardDeck.length;
    console.log('decklen,', deckLen);
    const card = cardDeck[counter];
    
    
    const len = Object.keys(card).length;
    let mForm = document.getElementById("myForm");
    let inputRemove = document.querySelectorAll('label');
    let brRemove = document.querySelectorAll('br');
    
    if(inputRemove){
        for(let element of inputRemove)
        element.remove();
    };
    if(brRemove){
        for(let element of brRemove){
            element.remove();
        }
    }
    for(let i = 0; i<len -1; i++){
      let lineBreak = document.createElement('br');
      let gen = document.createElement('input');
      let genLabel = document.createElement('label');
      let key = Object.keys(card)[i];
      let val = Object.values(card)[i];
      gen.setAttribute('type','text')
      gen.setAttribute('placeholder',val)
      gen.setAttribute('name',key)
      
      gen.setAttribute('value', val)  
      console.log('key is ', key)
      genLabel.setAttribute('id',key)
      genLabel.textContent = key;
      genLabel.appendChild(gen)
      mForm.appendChild(genLabel);
      mForm.appendChild(lineBreak);
       
    }
    document.getElementById('nextbtn').onclick = function(){
        counter = parseInt(sessionStorage.getItem('count'), 10)
        if(counter>= deckLen){
            console.log('you\'ve reached the end of the list');
            
        }else{
             sessionStorage.setItem('count', counter + 1);
            
        }
       
        counter = parseInt(sessionStorage.getItem('count'),10)
        
        renderForm();
        updateCounter();
   }
   
   }
   /*document.getElementById('submitbtn').onclick = function(){
        let mForm = document.getElementById('myForm');
        mForm.submit();
   }*/
   /*document.getElementById('nextbtn').onclick = function(){
        counter = parseInt(sessionStorage.getItem('count'), 10)
        sessionStorage.setItem('count', counter + 1);
        counter = parseInt(sessionStorage.getItem('count'),10)
        
        renderForm();
        updateCounter();
   }*/
   document.getElementById('prevbtn').onclick = function(){
        counter = parseInt(sessionStorage.getItem('count'), 10)
        
        if(counter<= 0){
            console.log('youre already at beginning of list');
            sessionStorage.setItem('count', 0);
        }else{
            sessionStorage.setItem('count', counter - 1)
            
        }
        counter = parseInt(sessionStorage.getItem('count'),10)
        renderForm();
        updateCounter();
    }
   
showCounter();
renderForm();
</script>
</html>