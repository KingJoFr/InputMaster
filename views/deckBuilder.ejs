<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body{
            display: grid;
        }
        #_id{
            visibility: hidden;
        }
        .formContainer{
            display:grid;
            width: 50%;
            margin: 0 auto;
        }
        label{
        display: grid;
        grid-template-columns: 1fr 2fr;
      
        line-height: 40px;
        margin-bottom: 10px;
        }
        #counterContainer{
            display: grid;
            margin: 0  auto;
        }
        .btnContainer{
            display:grid;
            grid-template-columns: 1fr 1fr 1fr;
            margin: 10px;
        }
        button{
            margin: 0 auto;
        }
        .counterContainer{
            margin: 20px;
            display: grid;
            grid-template-columns: 1fr 1fr;
        }
        .searchContainer{
            margin: 10px auto;
        }

    </style>
</head>

<!--endpoint?_method=PUT for updating-->

<!--To do mar 6. can now submit form so now need to create the put route to update the card info from the form inputs-->
<body>
    <a href="/">home</a>
   <center> <h1>Card Editor</h1></center>
<!------------------------search------------------------->
   
   <div class="formContainer">
        <form id="myForm" name="myForm" method="POST" action="/deckBuilderSubmit?_method=PUT">  
            <button type="submit" id ='submitbtn' form="myForm">submit</button>
            
        </form>
        <div class="btnContainer">
            <button id ="nextbtn">next</button>
            <button id ="prevbtn">prev</button>
            <div id="counterContainer" class="counterContainer">
                <button id="countbtn">update Count</button>
            </div>
        </div>
    </div>
    

    <div class="searchContainer">
        <form name="searchForm" id="searchForm" action="/deckBuilderSearch">
            <input type="text" name="searchItem" id="searchItem" placeholder="search a drug" />
            <button type="submit">search</button> 
        </form>
       </div>
</body>


<script type="text/javascript">
   // const cardDeck = JSON.parse('<%#-JSON.stringify(cards) %>')
   // todo. update counter to match the index of the search item.
   sessionStorage.setItem('count',0);
    var counter = parseInt(sessionStorage.getItem('count'), 10)

    


   document.getElementById('countbtn').onclick = function(){
            let inputCount = document.getElementById('countInput').value;
            
            sessionStorage.setItem('count', inputCount);
            counter = parseInt(sessionStorage.getItem('count'));
            renderForm();
            

   }
   function updateCounter(){
    let countInput = document.getElementById('countInput')
    countInput.value = '';
    countInput.setAttribute('placeholder',counter)

   }

   function showCounter(){
    
    let counterContainer = document.getElementById('counterContainer');
    let countInput = document.createElement('input');
    countInput.setAttribute('id', 'countInput')
    countInput.setAttribute('placeholder', counter);
    counterContainer.appendChild(countInput);
   }
   function pickCardValue(cardDeck, searchedCard, counter){
    if(searchedCard){
        return cardDeck.find((card)=> card.generic == searchedCard)
    }else{
        return cardDeck[counter]
    }

   }

   async function renderForm(searchedCard){
   

    const response = await fetch('http://localhost:3000/deckBuilderData')
    const cardDeck = await response.json();
    const deckLen = cardDeck.length;
    
    const card = pickCardValue(cardDeck,searchedCard,counter)
    
    
    const len = Object.keys(card).length;
    let mForm = document.getElementById("myForm");
    let inputRemove = document.querySelectorAll('label');
    let brRemove = document.querySelectorAll('br');
    
    if(inputRemove){
        for(let element of inputRemove)
        element.remove();
    };
    if(brRemove){
        for(let element of brRemove){
            element.remove();
        }
    }
    for(let i = 0; i<len ; i++){
      let lineBreak = document.createElement('br');
      let gen = document.createElement('input');
      let genLabel = document.createElement('label');
      let key = Object.keys(card)[i];
      let val = Object.values(card)[i];
      gen.setAttribute('type','text')
      gen.setAttribute('placeholder',val)
      gen.setAttribute('name',key)
      
      gen.setAttribute('value', val)  
      
      genLabel.setAttribute('id',key)
      genLabel.textContent = key;
      genLabel.appendChild(gen)
      mForm.appendChild(genLabel);
      mForm.appendChild(lineBreak);
       
    }
    document.getElementById('nextbtn').onclick = function(){
        counter = parseInt(sessionStorage.getItem('count'), 10)
        if(counter>= deckLen){
            console.log('you\'ve reached the end of the list');
            
        }else{
             sessionStorage.setItem('count', counter + 1);
            
        }
       
        counter = parseInt(sessionStorage.getItem('count'),10)
        
        renderForm();
        updateCounter();
   }
   
   }
   /*document.getElementById('submitbtn').onclick = function(){
        let mForm = document.getElementById('myForm');
        mForm.submit();
   }*/
   /*document.getElementById('nextbtn').onclick = function(){
        counter = parseInt(sessionStorage.getItem('count'), 10)
        sessionStorage.setItem('count', counter + 1);
        counter = parseInt(sessionStorage.getItem('count'),10)
        
        renderForm();
        updateCounter();
   }*/
   document.getElementById('prevbtn').onclick = function(){
        counter = parseInt(sessionStorage.getItem('count'), 10)
        
        if(counter<= 0){
            console.log('youre already at beginning of list');
            sessionStorage.setItem('count', 0);
        }else{
            sessionStorage.setItem('count', counter - 1)
            
        }
        counter = parseInt(sessionStorage.getItem('count'),10)
        renderForm();
        updateCounter();
    }
    const searchForm = document.getElementById('searchForm').addEventListener('submit', async (e)=>{
        e.preventDefault();
        console.log('entered searchform')
        const searchedCard = await searchCard();
        console.log('search card complete')
        await renderForm(searchedCard);
        let myForm = document.getElementById('myForm')
        let sig2Label = document.createElement('label');
        let sig2Input = document.createElement('input');
       
        sig2Label.setAttribute('for','sig2')
        sig2Label.textContent = "sig2";
        sig2Input.setAttribute("name","sig2")
        sig2Input.setAttribute("placeholder","sig2");
        sig2Input.setAttribute('type','text');
        sig2Label.appendChild(sig2Input);
        myForm.appendChild(sig2Label);
        console.log('append sig2 complete')
        
    })

async function searchCard(){
    const searchedCard = document.getElementById('searchItem').value;
    //const response = fetch('http://localhost:3000/deckBuilderSearch')
    //const searchedCard = response.json();

    return searchedCard
}
   
showCounter();
renderForm();
</script>
</html>